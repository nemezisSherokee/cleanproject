services:
  rabbitmq:
    image: "rabbitmq:3-management"
    environment:
      - 'RABBITMQ_DEFAULT_PASS=guest'
      - 'RABBITMQ_DEFAULT_USER=guest'
    ports:
      - '5672'
      - 5672:5672
      - 15672:15672
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - myNetwork

  kafka:
    image: 'bitnami/kafka:latest'
    user: root
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - ./.kafka:/bitnami/kafka
    networks:
      - myNetwork
    depends_on:
      - zookeeper
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    ports:
      - 5432:5432
    volumes:
      - ~/apps/postgreslearning:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgreslearning
      - POSTGRES_USER=postgreslearning
      - POSTGRES_DB=postgreslearning
  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ~/apps/redis/data:/root/redis
      - ~/apps/redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=redis
      - REDIS_PORT=6379
      - REDIS_DATABASES=16
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./cfg/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - 3003:3003
    env_file:
      - ./cfg/grafana/grafana.env

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.13
    container_name: es
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - myNetwork
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.13
    container_name: logstash
    ports:
      - "5000:5000"
    volumes:
      - ./.apps/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./.apps/logstash:/usr/share/logstash/config
      - ./.apps/logstash/order-processing-service/logs:/usr/share/logstash/logs
      - ./.apps/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    command: ["-f", "/usr/share/logstash/config/logstash.conf"]
    depends_on:
      - elasticsearch
    networks:
      - myNetwork

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.13
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - logstash
    networks:
      - myNetwork


networks:
  myNetwork:
    driver: bridge
  elk-network:
    driver: bridge

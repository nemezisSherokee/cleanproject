spring:
  application:
    name: orderprocessing
  rabbitmq:
    host: rabbitmq
    port: ${RABBIT_PORT:5672}
    username: guest
    password: guest
  kafka:
#    bootstrap-servers: kafka:29092
    bootstrap-servers: kafka:${KAFKA_PORT:9092}
    consumer:
      group-id: myGroup
  datasource:
    url: jdbc:postgresql://postgresql:${POSGRES_PORT:5432}/postgreslearning
    username: postgreslearning
    password: postgreslearning
    driver-class-name: org.postgresql.Driver
  cache:
    type: redis
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    generate-ddl: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  data:
    redis:
      host: redis
      port: ${REDIS_PORT:6379}
      password: redis
      connect-timeout: 60000

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /
      path-mapping:
        prometheus: "metrics"
  metrics:
    tags:
      application: "OrderService"
  endpoint:
    health:
      enabled: true
      show-details: always
  prometheus:
    metrics:
      export:
        enabled: true

server:
  port: 8080

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: false
    register-with-eureka: false
    service-url:
      defaultZone: ${EUREKA_SERVER_ADDRESS:http://eurekaserver:${EUREKA_PORT:8080}/eureka}

logging:
  file:
    name: ./.apps/logstash/order-processing-service/logs/order-processing-service.log
